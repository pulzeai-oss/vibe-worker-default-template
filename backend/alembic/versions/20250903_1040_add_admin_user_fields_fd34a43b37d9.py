"""add_admin_user_fields

Revision ID: fd34a43b37d9
Revises: be24780c0da0
Create Date: 2025-09-03 10:40:01.317618

"""
from alembic import op
import sqlalchemy as sa
from passlib.context import CryptContext
import uuid


# revision identifiers, used by Alembic.
revision = 'fd34a43b37d9'
down_revision = 'be24780c0da0'
branch_labels = None
depends_on = None

# Password hashing context
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_account', sa.Column('is_admin', sa.Boolean(), nullable=False))
    # ### end Alembic commands ###
    
    # Create the default admin user
    # Hash the password "admin123"
    password_hash = pwd_context.hash("admin123")
    
    # Insert the default admin user
    op.execute(
        sa.text("""
            INSERT INTO user_account (user_id, email, hashed_password, is_admin, create_time, update_time)
            VALUES (:user_id, 'admin@example.com', :password_hash, true, now(), now())
            ON CONFLICT (email) DO NOTHING;
        """).bindparams(user_id=str(uuid.uuid4()), password_hash=password_hash)
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove the default admin user
    op.execute(
        sa.text("DELETE FROM user_account WHERE email = 'admin@example.com';")
    )
    op.drop_column('user_account', 'is_admin')
    # ### end Alembic commands ###
